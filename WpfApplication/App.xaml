<Application x:Class="MaCompta.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:common="clr-namespace:MaCompta.Common"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <!--<ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="WhistlerBlue.xaml"/>
            </ResourceDictionary.MergedDictionaries>-->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Themes/Generic.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <common:CurrencyConverter x:Key="MyCurrencyConverter"/>
            <common:DecimalToColorConverter x:Key="CurrencyToColor"/>
            <common:DateTimeConverter x:Key="DateConverter"/>
            <BooleanToVisibilityConverter x:Key="BoolToVis"/>
            <common:BooleanToModifiedColorConverter x:Key="BoolToColorConverter" />
            <common:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />

            <!-- Bouton de filtre -->
            <ControlTemplate x:Key="ButtonFilterTemplate">
                <Image Source="/Images/filter.png" Width="16" Height="16" />
            </ControlTemplate>
            <Style TargetType="{x:Type Label}">
                <Setter Property="FontFamily" Value="Segoe UI"/>
            </Style>
            <!--<sys:Double x:Key="OpacityDisable">0.4</sys:Double>-->
            <!--<Style x:Key="ToggleButtonDatagrid" TargetType="ToggleButton">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="ExpanderButtonBorder" Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Fill="Transparent" Grid.ColumnSpan="2" />
                                    <Ellipse Name="Circle" Grid.Column="0" Stroke="DarkGray" Width="20" Height="20"
                                             HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    <Path x:Name="SignPlus" Grid.Column="0" Data="M 0,5 H 10 M 5,0 V 10 Z"
                                          Stroke="#FF666666" Width="10" Height="10" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center"
                                          RenderTransformOrigin="0.5,0.5" />
                                    <Path x:Name="SignMinus" Grid.Column="0" Data="M 0,5 H 10 Z"
                                          Stroke="#FF666666" Width="10" Height="10" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center"
                                          RenderTransformOrigin="0.5,0.5" />
                                    <ContentPresenter x:Name="HeaderContent" Grid.Column="1" Margin="4,0,0,0"
                                                      ContentSource="Content" />
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Visibility" TargetName="SignPlus" Value="Collapsed" />
                                    <Setter Property="Visibility" TargetName="SignMinus" Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="Visibility" TargetName="SignPlus" Value="Visible" />
                                    <Setter Property="Visibility" TargetName="SignMinus" Value="Collapsed" />
                                </Trigger>

                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Stroke" Value="#FF3C7FB1" TargetName="Circle" />
                                    <Setter Property="Stroke" Value="#222" TargetName="SignPlus" />
                                    <Setter Property="Stroke" Value="#222" TargetName="SignMinus" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Stroke" Value="#FF526C7B" TargetName="Circle" />
                                    <Setter Property="StrokeThickness" Value="1.5" TargetName="Circle" />
                                    <Setter Property="Stroke" Value="#FF003366" TargetName="SignPlus" />
                                    <Setter Property="Stroke" Value="#FF003366" TargetName="SignMinus" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>-->

            <!-- en-tete des tableaux -->
            <Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DataGridColumnHeader">
                            <Border BorderThickness="1" BorderBrush="Gray" Background="#FFCCCCCC">
                                <Label FontSize="12" FontWeight="Bold" MinHeight="20" FontFamily="Segoe UI"
                                   HorizontalContentAlignment="Center"
                                   Content="{TemplateBinding Content}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <LinearGradientBrush x:Key="ButtonNormalBackgroundFill" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FFFFFFFF" Offset="0"/>
                <GradientStop Color="#FFF0F0EA" Offset="0.9"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ButtonBorder" Color="#FF003C74"/>
            <Style x:Key="PlusMinusToggleButtonStyle" TargetType="{x:Type ToggleButton}">
                <!--<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>-->
                <Setter Property="Background" Value="{StaticResource ButtonNormalBackgroundFill}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorder}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">

                            <Border x:Name="border" BorderThickness="2">
                                <Grid>
                                <Image x:Name="PlusLogo" Stretch="UniformToFill" Source="Images/plusBtn.png" >
                                    <Image.Visibility>
                                        <Binding Path="IsChecked" RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <common:BoolToVisibilityConverter FalseToVisibility="Visible"   />
                                            </Binding.Converter>
                                        </Binding>
                                    </Image.Visibility>
                                </Image>
                                <Image x:Name="MinusLogo" Stretch="UniformToFill" Source="Images/minusBtn.png" >
                                    <Image.Visibility>
                                        <Binding Path="IsChecked" RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <common:BoolToVisibilityConverter FalseToVisibility="Hidden" />
                                            </Binding.Converter>
                                        </Binding>
                                    </Image.Visibility>
                                </Image>
                            </Grid>
                            </Border>

                            <ControlTemplate.Triggers>

                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="Blue"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
  
            <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Width" Value="100" />
                <Setter Property="Margin" Value="2" />
            </Style>

            <Style x:Key="IdStyle" TargetType="{x:Type Label}">
                <Setter Property="FontSize" Value="8"/>
                <!--<Setter Property="Width" Value="20"/>-->
                <Setter Property="MinWidth" Value="20"/>
            </Style>
                <!-- template ordre -->
            <DataTemplate x:Key="OrdreTemplate">
                <StackPanel Background="{Binding IsModified, Converter={StaticResource BoolToColorConverter}}">
                    <Label Content="{Binding Ordre}" FontWeight="DemiBold"/>
                    <Label Content="{Binding Poste}" Visibility="{Binding Poste,Converter={StaticResource StringToVisibilityConverter}}"/>
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Key="OrdreEditTemplate">
                <StackPanel Background="{Binding IsModified, Converter={StaticResource BoolToColorConverter}}">
                    <!--<TextBox Text="{Binding Ordre, Mode=TwoWay}" Margin="2"/>-->
                    <!--<AutoCompleteBox ItemsSource="{Binding Ordres}"
                                              Text="{Binding Ordre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsTextCompletionEnabled="True" />-->
                    <xctk:WatermarkComboBox IsEditable="True" WatermarkTemplate="{x:Null}" ItemsSource="{Binding Ordres}"
                                              Text="{Binding Ordre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <Label Content="{Binding Poste}" Margin="2" />
                </StackPanel>
            </DataTemplate>
            
            <Style x:Key="CenterCellStyle" TargetType="{x:Type DataGridCell}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Grid Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="RightCellStyle" TargetType="{x:Type DataGridCell}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Grid Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Right" VerticalAlignment="Center"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- template Montant -->
            <DataTemplate x:Key="MontantTemplate">
                <Border Background="{Binding Montant, Mode=OneWay,Converter={StaticResource CurrencyToColor}}">
                    <Label IsHitTestVisible="false" 
                               Height="25"
                               VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Content="{Binding Montant, Mode=OneWay,Converter={StaticResource MyCurrencyConverter}}"
                        FontWeight="Bold"
                               FontStyle="Italic"
                       Foreground="White"/>
                </Border>
            </DataTemplate>
            <!--date d'opération -->
            <DataTemplate x:Key="DateOperationTemplate">
                <StackPanel Background="{Binding IsModified, Converter={StaticResource BoolToColorConverter}}">
                    <Label Content="{Binding DateOperation, Converter={StaticResource DateConverter}}"/>
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Key="DateValidationTemplate">
                <StackPanel Background="{Binding IsModified, Converter={StaticResource BoolToColorConverter}}">
                    <Label Content="{Binding DateValidation, Converter={StaticResource DateConverter}}" Margin="4"/>
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Key="DateValidationPartielleTemplate">
                <StackPanel Background="{Binding IsModified, Converter={StaticResource BoolToColorConverter}}">
                    <Label Content="{Binding DateValidationPartielle, Converter={StaticResource DateConverter}}" 
                       Margin="4"/>
                </StackPanel>
            </DataTemplate>
        </ResourceDictionary>
    </Application.Resources>
</Application>
